

CREATE COMPUTE MODULE EXCEPTION_HANDLING_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN


        
	        DECLARE InputTree REFERENCE to InputExceptionList;
	        DECLARE messageNumber INTEGER;
	        DECLARE messageText CHARACTER;
	        DECLARE parserException CHARACTER;
            CALL CopyMessageHeaders (InputTree,messageNumber,messageText,parserException);
            SET OutputRoot.JSON.Data.EXCEPTION.PARSEREXCEPTION= parserException;
            SET OutputRoot.JSON.Data.EXCEPTION.MESSAGENUMBER= messageNumber;
            SET OutputRoot.JSON.Data.EXCEPTION.MESSAGETEXT=	messageText;
            
		-- CALL CopyEntireMessage();
		
	RETURN TRUE;
	END;
		CREATE PROCEDURE CopyMessageHeaders (IN InputTree reference,OUT messageNumber integer,
OUT messageText char,OUT parserException char)	
    /****************************************************************************
	 * A procedure that will get the details of the last exception from a message
	 * IN InputTree:  The incoming exception list
	 * IN messageNumber:  The last message numberr.
	 * IN messageText: The last message text.
	 *****************************************************************************/
   BEGIN
   	    -- Create a reference to the first child of the exception list
   	    declare ptrException reference to InputTree.*[1];
   	    -- keep looping while the moves to the child of exception list work 
		WHILE lastmove(ptrException) DO
			-- store the current values for the error number and text
			IF ptrException.Number is not null THEN
        		SET messageNumber = ptrException.Number;
        		SET messageText = ptrException.Text;
        		SET parserException=FIELDNAME(ptrException);
        		
  			END IF;
  			-- now move to the last child which should be the next exceptionlist
			move ptrException lastchild;
		
		END WHILE; 
   END;
   
END MODULE;

		